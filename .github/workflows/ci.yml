name: Build & Test

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PROJECT_PATH: src/src/GoAnyway.Framework/GoAnyway.Framework.csproj
      TEST_PROJECT_PATH: src/test/GoAnyway.Framework.Tests/GoAnyway.Framework.Tests.csproj
      TEST_RESULTS_DIR: ./TestResults
      REPORT_DIR: ./TestReport

    steps:
    - name: ðŸ§¾ Checkout code
      uses: actions/checkout@v4

    - name: ðŸ›  Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: ðŸ”§ Restore
      run: dotnet restore ${{ env.PROJECT_PATH }} ${{ env.TEST_PROJECT_PATH }}

    - name: ðŸ§ª Build
      run: dotnet build ${{ env.PROJECT_PATH }} ${{ env.TEST_PROJECT_PATH }} --configuration Release --no-restore

    - name: âœ… Run tests
      run: |
        mkdir ${{ env.TEST_RESULTS_DIR }}
        dotnet test ${{ env.TEST_PROJECT_PATH }} \
          --no-build --configuration Release \
          --logger "trx;LogFileName=test-results.trx" \
          --results-directory ${{ env.TEST_RESULTS_DIR }}

    - name: ðŸ“¦ Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: ðŸ§¾ Generate HTML test report
      run: |
        reportgenerator \
          -reports:${{ env.TEST_RESULTS_DIR }}/*.trx \
          -targetdir:${{ env.REPORT_DIR }} \
          -reporttypes:Html

    - name: ðŸ“¤ Upload HTML Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: html-test-report
        path: ${{ env.REPORT_DIR }}